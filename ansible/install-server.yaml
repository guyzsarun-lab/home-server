---
- name: Install Server
  hosts: ubuntu-server
  gather_facts: true
  vars:
    HARBOR_VERSION: v2.10.0
    VAULT_KEY_SHARE: 5
    VAULT_KEY_THRES: 3
    APP_BASE: ./config/certs/server.proxmox.local

  tasks:
  - name: Install essentials
    block:
    - apt:
        name:
          - docker
          - net-tools
          - gpg
          - docker-compose
          - prometheus-node-exporter
          - nfs-common
        state: present
        update_cache: yes
    - name: Create "docker" group
      group:
        name: docker
        state: present
    #sudo usermod -aG docker root
    - name: Add remote "ubuntu" user to "docker" group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
    become: true
    tags:
    - init

  - name: Copy CA / Certificate-Key
    copy:
      backup: true
      dest: /home/devops/certs/
      src: "{{ item }}"
    loop:
      - "{{ APP_BASE }}.pem"
      - "{{ APP_BASE }}.key"
      - "./config/certs/proxmox.local.pem"
    tags: ssl


  - name: Install, Config Zerotier
    tags: zerotier
    import_tasks: install-zerotier.yaml

  - name: Mount NFS
    tags: nfs
    ansible.posix.mount:
      src: 172.16.0.4:/home/devops/nfs_share
      path: /mnt/nfs_share
      opts: rw,sync
      state: mounted
      fstype: nfs

  - name: Install, Config Harbor
    tags: harbor
    block:
      - file:
          path: /mnt/nfs_share/harbor
          state: directory
      - unarchive:
          src: https://github.com/goharbor/harbor/releases/download/{{ HARBOR_VERSION }}/harbor-offline-installer-{{ HARBOR_VERSION }}.tgz
          dest: /tmp
          remote_src: yes
      - copy:
          src: /tmp/harbor
          remote_src: true
          dest: /home/devops
      - copy:
          src: ./config/harbor/
          dest: /home/devops/harbor

  - name: Install, Config minio
    tags: minio
    block:
      - file:
          path: /mnt/nfs_share/minio
          state: directory
      - file:
          path: /home/devops/minio
          state: directory
      - copy:
          src: ./config/minio/docker-compose.yaml
          dest: /home/devops/minio/docker-compose.yaml
      - shell:
            chdir: /home/devops/minio/
            cmd: docker-compose -f docker-compose.yaml up -d

  - name: Install, Config vault
    tags: vault
    block:
      - shell: |
            wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --yes --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
      - name: Install vault
        become: yes
        apt:
          name:
            - vault=1.15.*
          state: present
          update_cache: yes

      - file:
          path: /mnt/nfs_share/vault
          state: directory

      - copy:
          src: ./config/vault/
          dest: /home/devops/vault

      - name: Copy systemd init file
        become: yes
        copy:
          src: ./config/vault/vault.service
          dest: /etc/systemd/system
          owner: devops
          group: devops

      - name: Start vault
        become: yes
        systemd:
          name: vault
          state: restarted
          enabled: true
          daemon_reload: true

      - shell: vault operator init -key-shares={{ VAULT_KEY_SHARE }} -key-threshold={{ VAULT_KEY_THRES }} -format=yaml
        environment:
          VAULT_ADDR: "http://127.0.0.1:8200"
        register: token

      - local_action:
          module: copy
          content: "{{ token.stdout }}"
          dest:   ./config/vault/token

      - name: Parse output of vault init
        set_fact:
          vault_init_parsed: "{{ token.stdout | from_yaml }}"

      - name: Unseal vault
        shell: |
          vault operator unseal {{ item }}
        environment:
          VAULT_ADDR: "http://127.0.0.1:8200"
        loop: "{{ vault_init_parsed.unseal_keys_b64[:VAULT_KEY_THRES] }}"

      - debug:
          msg: "export VAULT_ADDR=http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:8200"
